# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  author: Profile
  created: DateTime
  id: String
  post: [Comment!]!
  text: String
}

input CreateCommentInput {
  postId: String!
  text: String!
}

input CreatePostInput {
  text: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type IntercomMessage {
  payload: JSON
  scope: String
  type: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createComment(data: CreateCommentInput!): Comment!
  createPost(data: CreatePostInput!): Post
  deleteComment(id: String!): Comment!
  deletePost(id: String!): Post
  intercomPub(payload: JSON, scope: String, type: String!): IntercomMessage
  login(input: LoginInput!): UserToken
  logout: Boolean
  register(input: RegisterInput!): UserToken
}

type Post {
  author: Profile!
  commentCount: Float
  commentedBy: [Profile!]
  comments: [Comment!]
  created: DateTime
  id: String
  text: String
}

type Profile {
  avatarUrl: String
  bio: String
  created: DateTime
  firstName: String
  id: String
  lastName: String
  name: String
  posts: Post
  username: String
}

type Query {
  comments(postId: String!): [Comment!]!
  me: User
  post(id: String!): Post
  posts: [Post!]
  profile(username: String!): Profile
  profiles: [Profile!]
  uptime: Float
  userPosts(userId: String!): [Post!]
}

input RegisterInput {
  avatarUrl: String
  email: String!
  firstName: String
  lastName: String
  password: String!
  phone: String
  username: String
}

"""User role"""
enum Role {
  Admin
  User
}

type Subscription {
  intercomSub(scope: String, type: String): IntercomMessage
}

type User {
  avatarUrl: String
  bio: String
  createdAt: DateTime
  email: String
  firstName: String
  id: String
  lastName: String
  location: String
  name: String
  phone: String
  role: Role
  updatedAt: DateTime
  username: String
}

type UserToken {
  """JWT Bearer token"""
  token: String!
  user: User!
}
